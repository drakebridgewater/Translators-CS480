
(
	( + 6 7 )
    ( * 2 11 )
    ( % 5 8 )
    ( - 4 9 )
    ( / 10 2 )
    ( let ( ( x int ) ) )
    ( := x 10 )
    ( stdout ( - 20 x ) )

    ( if ( > x 1 )
        ( stdout "yes1" )
    )
    ( if ( < x 2 )
        ( stdout  ( + "yes2" " true" ) )
        ( stdout ( + "no2" " true" ) )
    )
    ( if ( < x 3 )
        ( stdout  ( + "yes3" " true" ) )
        ( stdout ( + "no3" " true" ) )
    )
    ( if ( < x 4 )
        ( stdout "yes4" )
    )
    ( := x 15 )
    ( while ( > x 5 )
        ( stdout "hello5" )
        ( := x ( - x 1 ) )
    )
    ( if ( > x 6 )
        ( stdout "yes6" )
    )

    ( let ( ( n int ) ( a real ) ( b real )
    ( area real ) ( width real ) ( x real ) ) )

    ( := n 100 )
    ( := a 0 )
    ( := b 1 )
    ( := area 0 )
    ( := x a )
    ( := width ( / ( - b a ) n ) )

    ( while ( < x b )
      ( := area ( + area ( * ( ^ x 2 ) width ) ) )
      ( := x ( + x width ) )
    )

    ( stdout area )
)